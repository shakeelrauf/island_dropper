<div class="off-canvas">
  <div class="delivery-address-canvas">
    <div class="container">
      <div class="d-flex mt-3 mt-md-4 mb-4 mb-sm-5">
        <a href="#" class="delivery-heading mb-3">Pick Up</a>
      </div>
      <%= simple_form_for @delivery, url: wizard_path, html: {id: 'pickup-form'} do |f| %>
      <form class="delivery-form">
        <div class="deliveryAdd-fieldBlock">
          <%= f.fields_for :pickup do |ff| %>
            <div class="row">
              <div class="col col-12 col-md-6">
                <div class="form-group">
                  <%= ff.label :first_name, class: "form-label pl-md-3" %>
                  <%= ff.text_field :first_name, autofocus: true, class: "form-control form-field-rounded" %>

                 <%= error_message_on(ff.object, :first_name) %>
                </div>
              </div>
              <div class="col col-12 col-md-6">
                <div class="form-group">
                  <%= ff.label :last_name, class: "form-label pl-md-3" %>
                  <%= ff.text_field :last_name,class: "form-control form-field-rounded" %>
                 <%= error_message_on(ff.object, :first_name) %>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col col-12 col-md-6">
                <div class="form-group">
                  <%= ff.label :address, class: "form-label pl-md-3" %>
                  <%= ff.text_field :address,class: "form-control form-field-rounded",id: 'autocomplete', placeholder: "Enter drop off address" %>
                 <%= error_message_on(ff.object, :address) %>
                </div>
              </div>
              <div class="col col-12 col-md-6">
                <div class="form-group">
                  <%= ff.label :phone_number, class: "form-label pl-md-3" %>
                  <%= ff.text_field :phone_number,class: "form-control form-field-rounded", placeholder: "355 69 2656 8 244" %>

                 <%= error_message_on(ff.object, :phone_number) %>
                </div>
              </div>
            </div>
          </div>

        <% end %>  
    
          <div class="radiobtn-set d-inline-block w-100 mb-4 pb-sm-2">
            <div class="float-left w-100">
               <%= f.label :priority,  class: "radiobtn-field float-left mr-5" do %>
                make-priority?
                  <%= f.check_box :priority  %>
                   <span class="checkmark"></span>
              <% end %>
            </div>
            <div class="float-left w-100">
              <%= f.label :pre_order,  class: "radiobtn-field float-left mr-5" do %>
                Pre-order?
                  <%= f.check_box :pre_order %>
                   <span class="checkmark"></span>
              <% end %>
              <div class="calender-group float-left">
                <%= f.input :pre_order_date, as: :string,label: false, input_html: {  class: "form-control form-field", id: "calender_input"} %>
                <%= link_to '#' , class: "btn btn-calender" do %>
                  <%= image_tag "calender.png" , width: "13" %>
                <% end %>
              </div>
            </div>
          </div>
        <div class="row">
          <div class="col col-12 col-md-6 offset-md-6">
            <div class="deliveryItem-btns mt-sm-2 text-right">
              <%= f.submit 'Save Draft', class: "btn btn-white mr-1 mr-sm-3 ml-1 mb-sm-0 text-uppercase w-100-m"%>
              <%= f.submit 'Next', class: "btn btn-next btn-next-dark ml-1 ml-sm-0 text-uppercase w-100-m" %>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script type="text/javascript">
  $(".btn-calender").click(function(e){
    e.preventDefault();
    $('#calender_input').datetimepicker({
                    defaultDate: "11/1/2013"
                });
  })

     $('#calender_input').datetimepicker({
                daysOfWeekDisabled: [0, 6]
            });
  function initialize() {
    // var input = document.getElementById('pickup_address');
    new google.maps.places.Autocomplete(input);
  }

  google.maps.event.addDomListener(window, 'load', initialize);

     // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      // var componentForm = {
      //   street_number: 'short_name',
      //   route: 'long_name',
      //   locality: 'long_name',
      //   administrative_area_level_1: 'short_name',
      //   country: 'long_name',
      //   postal_code: 'short_name'
      // };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical

        // // location types.
        // autocomplete = new google.maps.places.Autocomplete(
        //     // /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
        //     {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        // autocomplete.addListener('place_changed', fillInAddress);
      }

      // function fillInAddress() {
      //   // Get the place details from the autocomplete object.
      //   var place = autocomplete.getPlace();

        // for (var component in componentForm) {
        //   document.getElementById(component).value = '';
        //   document.getElementById(component).disabled = false;
        // }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
      //   for (var i = 0; i < place.address_components.length; i++) {
      //     var addressType = place.address_components[i].types[0];
      //     if (componentForm[addressType]) {
      //       var val = place.address_components[i][componentForm[addressType]];
      //       document.getElementById(addressType).value = val;
      //     }
      //   }
      // }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }

</script>
 <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GEOCODE_API_KEY'] %>&libraries=places&callback=initAutocomplete"
        ></script>
<%= javascript_include_tag 'steps.js' %>